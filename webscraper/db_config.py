import db_sch_funcs as dsf

# Table Schemas
matches = {'gameId': int,
           'platformId': str,
           'gameCreation': int,
           'gameDuration': int,
           'queueId': int,
           'mapId': int,
           'seasonId': int,
           'gameVersion': str,
           'gameMode': str,
           'gameType': str}

teams = {'teamId': int,
         'win': str,
         'firstBlood': bool,
         'firstTower': bool,
         'firstInhibitor': bool,
         'firstBaron': bool,
         'firstDragon': bool,
         'firstRiftHerald': bool,
         'towerKills': int,
         'inhibitorKills': int,
         'baronKills': int,
         'dragonKills': int,
         'vilemawKills': int,
         'riftHeraldKills': int,
         'dominionVictoryScore': int}
bans = {'championId': int,
        'pickTurn': int}

participants = {'participantId': int,
                'teamId': int,
                'championId': int,
                'spell1Id': int,
                'spell2Id': int,
                'highestAchievedSeasonTier': str}

stats = {'participantId': int,
         'win': bool,
         'item0': int,
         'item1': int,
         'item2': int,
         'item3': int,
         'item4': int,
         'item5': int,
         'item6': int,
         'kills': int,
         'deaths': int,
         'assists': int,
         'largestKillingSpree': int,
         'largestMultiKill': int,
         'killingSprees': int,
         'longestTimeSpentLiving': int,
         'doubleKills': int,
         'tripleKills': int,
         'quadraKills': int,
         'pentaKills': int,
         'unrealKills': int,
         'totalDamageDealt': int,
         'magicDamageDealt': int,
         'physicalDamageDealt': int,
         'trueDamageDealt': int,
         'largestCriticalStrike': int,
         'totalDamageDealtToChampions': int,
         'magicDamageDealtToChampions': int,
         'physicalDamageDealtToChampions': int,
         'trueDamageDealtToChampions': int,
         'totalHeal': int,
         'totalUnitsHealed': int,
         'damageSelfMitigated': int,
         'damageDealtToObjectives': int,
         'damageDealtToTurrets': int,
         'visionScore': int,
         'timeCCingOthers': int,
         'totalDamageTaken': int,
         'magicalDamageTaken': int,
         'physicalDamageTaken': int,
         'trueDamageTaken': int,
         'goldEarned': int,
         'goldSpent': int,
         'turretKills': int,
         'inhibitorKills': int,
         'totalMinionsKilled': int,
         'neutralMinionsKilled': int,
         'neutralMinionsKilledTeamJungle': int,
         'neutralMinionsKilledEnemyJungle': int,
         'totalTimeCrowdControlDealt': int,
         'champLevel': int,
         'visionWardsBoughtInGame': int,
         'sightWardsBoughtInGame': int,
         'wardsPlaced': int,
         'wardsKilled': int,
         'firstBloodKill': bool,
         'firstBloodAssist': bool,
         'firstTowerKill': bool,
         'firstTowerAssist': bool,
         'combatPlayerScore': int,
         'objectivePlayerScore': int,
         'totalPlayerScore': int,
         'totalScoreRank': int,
         'playerScore0': int,
         'playerScore1': int,
         'playerScore2': int,
         'playerScore3': int,
         'playerScore4': int,
         'playerScore5': int,
         'playerScore6': int,
         'playerScore7': int,
         'playerScore8': int,
         'playerScore9': int,
         'perk0': int,
         'perk0Var1': int,
         'perk0Var2': int,
         'perk0Var3': int,
         'perk1': int,
         'perk1Var1': int,
         'perk1Var2': int,
         'perk1Var3': int,
         'perk2': int,
         'perk2Var1': int,
         'perk2Var2': int,
         'perk2Var3': int,
         'perk3': int,
         'perk3Var1': int,
         'perk3Var2': int,
         'perk3Var3': int,
         'perk4': int,
         'perk4Var1': int,
         'perk4Var2': int,
         'perk4Var3': int,
         'perk5': int,
         'perk5Var1': int,
         'perk5Var2': int,
         'perk5Var3': int,
         'perkPrimaryStyle': int,
         'perkSubStyle': int}

timeline = {'participantId': int,
            'creepsPerMinDeltas': {'10-20': float, '0-10': float},
            'xpPerMinDeltas': {'10-20': float, '0-10': float},
            'goldPerMinDeltas': {'10-20': float, '0-10': float},
            'csDiffPerMinDeltas': {'10-20': float, '0-10': float},
            'xpDiffPerMinDeltas': {'10-20': float, '0-10': float},
            'damageTakenPerMinDeltas': {'10-20': float, '0-10': float},
            'damageTakenDiffPerMinDeltas': {'10-20': float, '0-10': float},
            'role': str,
            'lane': str}

participant_identity = {'participantId': int,
                        'player': {'platformId': str,
                                   'accountId': str,
                                   'summonerName': str,
                                   'summonerId': str,
                                   'currentPlatformId': str,
                                   'currentAccountId': str,
                                   'matchHistoryUri': str,
                                   'profileIcon': int}
                        }

# Schema objects
matches_schem = [{'name': 'matches',
                  'sch': matches,
                  'add_key': dict(),
                  'func': dsf.matches},
                 {'name': 'teams',
                  'sch': teams,
                  'add_key': {'gameId': int},
                  'func': dsf.teams},
                 {'name': 'bans',
                  'sch': bans,
                  'add_key': {'gameId': int, 'teamId': int},
                  'func': dsf.bans},
                 {'name': 'participants',
                  'sch': participants,
                  'add_key': {'gameId': int},
                  'func': dsf.participants},
                 {'name': 'stats',
                  'sch': stats,
                  'add_key': {'gameId': int, 'teamId': int},
                  'func': dsf.stats},
                 {'name': 'timeline',
                  'sch': timeline,
                  'add_key': {'gameId': int, 'teamId': int},
                  'func': dsf.timeline},
                 {'name': 'participant_ids',
                  'sch': participant_identity,
                  'add_key': {'gameId': int},
                  'func': dsf.participant_id}]

# Misc
types = {dict: 'dictionary',
         list: 'array',
         set: 'set',
         tuple: 'tuple',
         int: 'integer',
         str: 'string',
         bool: 'boolean',
         float: 'float'}
